# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VRLI - {{ step }} - Integrate Log Insight with AD'
    hosts: log_insight
    any_errors_fatal: True
    gather_facts: no
    tags:
        - 'VRLI - {{ step }} - Integrate Log Insight with AD'
    vars:
        step: EPB-650-080
        method_params:
            credentials: '{{ logInsightCred }}'
            adDetails:
                enableAD: true
                domain: '{{common.domain}}'
                username: '{{ ad_user.adbind_logi.username }}'
                password: '{{ ad_user.adbind_logi.password }}'
                sslOnly: False
                port: 389
                connType: 'CUSTOM'
            groups:
                -
                    name: '{{ ad_user_group.log_insight_admins.groupname }}'
                    groupIds:
                        - 'Super Admin'
    tasks:
        -
            name: 'VRLI - {{ step }} - Validate Log Insight with AD'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: integrateComponent
                method_name: validateActiveDirectoryIntegration
                method_params: '{{ method_params }}'
            register: validateAdIntegrationResults
            failed_when: not validateAdIntegrationResults.data is defined or validateAdIntegrationResults.data.err_message is defined or not validateAdIntegrationResults.data.status == true
            changed_when: validateAdIntegrationResults.data is defined and validateAdIntegrationResults.data.err_message is not defined and validateAdIntegrationResults.data.status == true
            ignore_errors: validateAdIntegrationResults.failed_when_result

        -
            name: 'VRLI - {{ step }} - Integrate Log Insight with AD'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: integrateComponent
                method_name: activeDirectoryIntegration
                method_params: '{{ method_params }}'
            register: integrateADResults
            failed_when: not integrateADResults.data is defined or integrateADResults.data.err_message is defined or not integrateADResults.data.status == true
            changed_when: integrateADResults.data is defined and not integrateADResults.data.err_message is defined and integrateADResults.data.status == true
            when: validateAdIntegrationResults.failed_when_result
            # Found a random error. On retry worked. So adding a retry here.
            retries: 2
            until: integrateADResults.data is defined and not integrateADResults.data.err_message is defined and integrateADResults.data.status == true
            delay: 10

        -
            name: 'VRLI - {{ step }} - Post Validate Log Insight with AD'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: integrateComponent
                method_name: validateActiveDirectoryIntegration
                method_params: '{{ method_params }}'
            register: postValidateAdIntegrationResults
            failed_when: not postValidateAdIntegrationResults.data is defined or postValidateAdIntegrationResults.data.err_message is defined or not postValidateAdIntegrationResults.data.status == true
            changed_when: postValidateAdIntegrationResults.data is defined and postValidateAdIntegrationResults.data.err_message is not defined and postValidateAdIntegrationResults.data.status == true
            when: not integrateADResults|skipped


-
    name: 'VRLI - {{ step }} - Integrate vCenter with Log Insight'
    hosts: log_insight
    gather_facts: no
    any_errors_fatal: True
    tags:
        - 'VRLI - {{ step }} - Integrate Log Insight with vCenter'
    vars:
        step: EPB-650-090
        method_params:
            logInsightCred: '{{ logInsightCred | combine({ "host": ansible_host_ip }) }}'
            vcenterUserDetails: '{{ vcenter_credentials_vrli }}'
    tasks:
        -
            name: 'VRLI - {{ step }} - Validate vCenter Log Insight Integration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: integrateComponent
                method_name: vcenterIntegrationValidation
                method_params: '{{ method_params }}'
            register: validateVCIntegrationResults
            failed_when: not validateVCIntegrationResults.data is defined or validateVCIntegrationResults.data.err_message is defined or not validateVCIntegrationResults.data.status == true
            changed_when: validateVCIntegrationResults.data is defined and validateVCIntegrationResults.data.err_message is not defined and validateVCIntegrationResults.data.status == true
            ignore_errors: validateVCIntegrationResults.failed_when_result

        -
            name: 'VRLI - {{ step }} - Integrate Log Insight with vCenter'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: integrateComponent
                method_name: vcenterIntegration
                method_params: '{{ method_params }}'
            register: VCIntegrationResults
            failed_when: not VCIntegrationResults.data is defined or VCIntegrationResults.data.err_message is defined or not VCIntegrationResults.data.status == true
            changed_when: VCIntegrationResults.data is defined and VCIntegrationResults.data.err_message is not defined and VCIntegrationResults.data.status == true
            when: validateVCIntegrationResults.failed_when_result
        -
            name: 'VRLI - {{ step }} - Post Validate vCenter Log Insight Integration'
            delegate_to: localhost
            ehc_script_agent:
                method_name: vcenterIntegrationValidation
                module_name: integrateComponent
                package_name: vrli
                method_params: '{{ method_params }}'
            register: postValidateVCIntegrationResults
            failed_when: not postValidateVCIntegrationResults.data is defined or postValidateVCIntegrationResults.data.err_message is defined or not postValidateVCIntegrationResults.data.status == true
            changed_when: postValidateVCIntegrationResults.data is defined and postValidateVCIntegrationResults.data.err_message is not defined and postValidateVCIntegrationResults.data.status == true
            when: not VCIntegrationResults|skipped

-
    name: 'VRLI - {{ step }} - vROps Manager integration with Log Insight'
    hosts: log_insight
    gather_facts: no
    any_errors_fatal: True
    tags:
        - 'VRLI - {{ step }} - vROps Manager integration with Log Insight'
    vars:
        step: EPB-650-100
        method_params:
            vrliInfo:
                host: '{{ host_address.log_insight.fqdn }}'
                username: admin
                password: '{{ vrealize_log_insight.admin_password }}'
                port: '{{ loginsight_port }}'
            vropsInfo:
                hostname: '{{ host_address.vrops_manager.fqdn }}'
                username: admin
                password: '{{ vrealize_operations_manager.vrops_admin_password }}'
    tasks:
        -
            name: 'VRLI - {{ step }} - Validate vROps Manager integration with Log Insight'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateVROPSManagerIntegration
                method_params: '{{ method_params }}'
                module_name: integrateComponent
                package_name: vrli
            register: validateVrliVropsResults
            failed_when: not validateVrliVropsResults.data is defined or validateVrliVropsResults.data.err_message is defined or not validateVrliVropsResults.data.connection == true or not validateVrliVropsResults.data.integration == true
            changed_when: validateVrliVropsResults.data is defined and validateVrliVropsResults.data.err_message is not defined and validateVrliVropsResults.data.connection == True and validateVrliVropsResults.data.integration == true
            ignore_errors: validateVrliVropsResults.failed_when_result

        -
            name: 'VRLI - {{ step }} - vROps Manager integration with Log Insight'
            delegate_to: localhost
            ehc_script_agent:
                method_name: vropsManagerIntegration
                module_name: integrateComponent
                package_name: vrli
                method_params: '{{ method_params }}'
            register: vrliVropsIntegrationResults
            failed_when: not vrliVropsIntegrationResults.data is defined or vrliVropsIntegrationResults.data.err_message is defined or not vrliVropsIntegrationResults.data.status == true
            changed_when: vrliVropsIntegrationResults.data is defined and vrliVropsIntegrationResults.data.err_message is not defined and vrliVropsIntegrationResults.data.status == true
            when: validateVrliVropsResults.failed_when_result
            # Sometimes this function throws error - 'Connection aborted.' but actually completes
            ignore_errors: True

        -
            name: 'VRLI - {{ step }} - Post Validate vROps Manager integration with Log Insight'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateVROPSManagerIntegration
                method_params: '{{ method_params }}'
                module_name: integrateComponent
                package_name: vrli
            register: postVrliValidationResults
            failed_when: not postVrliValidationResults.data is defined or postVrliValidationResults.data.err_message is defined or not postVrliValidationResults.data.connection == true or not postVrliValidationResults.data.integration == true
            changed_when: postVrliValidationResults.data is defined and postVrliValidationResults.data.err_message is not defined and postVrliValidationResults.data.connection == true and postVrliValidationResults.data.integration == true
            when: not vrliVropsIntegrationResults|skipped
            retries: 2
            until: postVrliValidationResults.data is defined and postVrliValidationResults.data.err_message is not defined and postVrliValidationResults.data.connection == true and postVrliValidationResults.data.integration == true
            delay: 15