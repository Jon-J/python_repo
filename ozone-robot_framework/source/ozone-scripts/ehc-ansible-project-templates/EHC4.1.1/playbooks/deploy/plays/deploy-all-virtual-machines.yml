# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Deploy All Virtual Machines'
    hosts: vrealize_servers, nsx_manager, vrops_data_nodes, log_insight_workers, vrops_remote_collectors, log_insight_forwarders, all_windows_servers
    any_errors_fatal: True
    serial:
      # Run 6 servers together for first two rounds. All linux servers can go at once
      - 6
      - 6
      # Run windows servers 2 at a time. Sometimes windows customization results in error. May be due to running many at a time.
      - 2
    tasks:
        -
            name: '{{ step }} - Check if VM is present'
            tags:
                - '{{ step }} - Deploy All Virtual Machines'
            delegate_to: localhost
            ehc_script_agent:
              package_name: common
              module_name: IVMManagement
              method_name: isVMPresent
              method_params:
                  vCenterDict: '{{ vcenter }}'
                  vmDict:
                      vmname: '{{ vmname }}'
            register: checkResult
            failed_when: not checkResult is defined or not checkResult.data is defined or checkResult.data.err_message is defined or not checkResult.data == true
            changed_when: checkResult is defined and checkResult.data is defined and not checkResult.data.err_message is defined and checkResult.data == true
            # Ignore errors when VM is present and not for any other errors
            ignore_errors: checkResult is defined and checkResult.data is defined and not checkResult.data.err_message is defined and checkResult.data == true

        -
            name: '{{ step }} - Deploy All Virtual Machines'
            tags:
                - '{{ step }} - Deploy All Virtual Machines'
            delegate_to: localhost
            ehc_script_agent: '{{ deploy_args }}'
            register: deployResult
            failed_when: not deployResult is defined or not deployResult.data is defined or deployResult.data.err_message is defined or not deployResult.data['{{ vmname }}'] is defined or not deployResult.data['{{ vmname }}']['success'] is defined or deployResult.data['{{ vmname }}']['success'] == false
            changed_when: deployResult is defined and deployResult.data is defined and not deployResult.data.err_message is defined and deployResult.data['{{ vmname }}'] is defined and deployResult.data['{{ vmname }}']['success'] is defined and deployResult.data['{{ vmname }}']['success'] == true
            when: checkResult.failed_when_result


-
    name: '{{ step }} - Wait for Windows servers to be up'
    hosts: all_windows_servers
    any_errors_fatal: True
    tasks:
        -
            name: "{{ step }} - Wait for Windows servers to be up"
            tags:
                - '{{ step }} - Deploy All Virtual Machines'
            delegate_to: localhost
            ehc_script_agent:
              package_name: common
              module_name: IVMManagement
              method_name: ensureGuestToolsRunning
              method_params:
                  vCenterDict: '{{ vcenter }}'
                  vmDict:
                      vmname: '{{ vmname }}'
            register: result
            failed_when: result.data is defined and result.data.err_message is defined
            changed_when: result.data is defined and not result.data.err_message is defined
            when: deployResult is defined and deployResult.changed