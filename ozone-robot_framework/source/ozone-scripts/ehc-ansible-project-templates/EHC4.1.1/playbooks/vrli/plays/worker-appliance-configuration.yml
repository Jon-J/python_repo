# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Log Insight Worker Apliance Configuration'
    hosts: log_insight_workers
    gather_facts: no
    any_errors_fatal: True
    # Do one after the other as it tries to login to log insight master host and this may result in resource clash if tried for both at the same time
    serial: 1
    tags:
          - '{{ step }} - Worker Appliance Configuration'
    vars:
        masterDetails:
            host: '{{ host_address.log_insight.fqdn }}'
            port: '{{ hostvars["log_insight"].loginsight_port }}'
            username: admin
            password: '{{ vrealize_log_insight.admin_password }}'
            masterName: '{{ hostvars["log_insight"].vmname }}'
        workerDetails:
            workerHost: '{{ ansible_host }}'
            workerAddress: '{{ ansible_host_ip }}'
            workerPort: '{{ hostvars["log_insight"].loginsight_port }}'
        loadBalancerConfig:
            highAvailabilityEnabled: true
            vips: '{{ vips }}'
    tasks:
        -
            name: '{{ step }} - Validate Worker Appliance Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightConfig
                method_name: validateWorkerConfig
                method_params:
                    vcenterDict: '{{ vcenter }}'
                    masterDetails: '{{ masterDetails }}'
                    workerDetails: '{{ workerDetails }}'
                    masterVMPassword: '{{ vrealize_log_insight.root_password }}'
                    loadBalancerConfig: '{{ loadBalancerConfig }}'
            register: validateWorkerAppConfigResults
            failed_when: not validateWorkerAppConfigResults.data is defined or validateWorkerAppConfigResults.data.err_message is defined or not validateWorkerAppConfigResults.data.overallStatus == true
            changed_when: validateWorkerAppConfigResults.data is defined and validateWorkerAppConfigResults.data.err_message is not defined and validateWorkerAppConfigResults.data.overallStatus == true
            ignore_errors: validateWorkerAppConfigResults.failed_when_result

        -
            name: '{{ step }} - Worker Appliance Configuration'
            delegate_to: localhost
            ehc_script_agent:
                method_name: configureWorker
                method_params:
                    masterDetails: '{{ masterDetails }}'
                    workerDetails: '{{ workerDetails }}'
                    loadBalancerConfig: '{{ loadBalancerConfig }}'
                module_name: logInsightConfig
                package_name: vrli
            register: workerApplianceConfigResults
            failed_when: not workerApplianceConfigResults.data is defined or workerApplianceConfigResults.data.err_message is defined or not workerApplianceConfigResults.data.status == true
            changed_when: workerApplianceConfigResults.data is defined and workerApplianceConfigResults.data.err_message is not defined and workerApplianceConfigResults.data.status == true
            when: validateWorkerAppConfigResults.failed_when_result

        # TODO check weather a delay is required
        -
            name: '{{ step }} - Poll vRLI Workers after worker appliance configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: pollvRealizeLogInsight
                method_name: pollvRealizeLogInsight
                method_params:
                    vRLIHost: '{{ ansible_host }}'
            register: pollvRLIResults
            failed_when: not pollvRLIResults.data is defined or pollvRLIResults.data.err_message is defined or not pollvRLIResults.data.status == true
            changed_when: pollvRLIResults.data is defined and pollvRLIResults.data.err_message is not defined and pollvRLIResults.data.status == true
            until: pollvRLIResults.data is defined and pollvRLIResults.data.err_message is not defined and pollvRLIResults.data.status == true
            retries: '{{ poll_retries }}'
            delay: '{{ poll_delay }}'

        -
            name: '{{ step }} - Post Validate Worker Appliance Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightConfig
                method_name: validateWorkerConfig
                method_params:
                    vcenterDict: '{{ vcenter }}'
                    masterDetails: '{{ masterDetails }}'
                    masterVMPassword: '{{ vrealize_log_insight.root_password }}'
                    workerDetails: '{{ workerDetails }}'
                    loadBalancerConfig: '{{ loadBalancerConfig }}'
            register: postvalidateWorkerAppConfigResults
            failed_when: not postvalidateWorkerAppConfigResults.data is defined or postvalidateWorkerAppConfigResults.data.err_message is defined or not postvalidateWorkerAppConfigResults.data.overallStatus == true
            changed_when: postvalidateWorkerAppConfigResults.data is defined and postvalidateWorkerAppConfigResults.data.err_message is not defined and postvalidateWorkerAppConfigResults.data.overallStatus == true
            when: not workerApplianceConfigResults|skipped