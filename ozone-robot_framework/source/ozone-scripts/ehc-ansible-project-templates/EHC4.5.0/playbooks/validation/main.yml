# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

---
# Playbook file: pre-Validation.yml
-   include: plays/pre-validation-input.yml step="VAL - EPB-100-010"
-   include: plays/pre-validation-dns.yml step="VAL - EPB-100-020"
-   include: plays/pre-validation-active-directory.yml step="VAL - EPB-100-030"
-   include: plays/pre-validation-ntp.yml step="VAL - EPB-100-040"
-   include: plays/pre-validation-ad-ntp.yml step="VAL - EPB-100-050"
-   include: plays/pre-validation-sso.yml step="VAL - EPB-100-060"
-   include: plays/pre-validation-smtp.yml step="VAL - EPB-100-070" subject="EHC SMTP Test" textInMail="This is a test email from EHC" play_name="Validate SMTP"
-   include: plays/read-software-manifest.yml step="VAL - EPB-100-080"
-   include: plays/pre-validation-repository.yml step="VAL - EPB-100-090"
-   include: plays/pre-validation-software-versions.yml step="VAL - EPB-100-100"
# TODO: Always fails as ozone.conf is changed during deployment
# -   include: plays/pre-validation-scripts.yml step="VAL - EPB-100-110"
-   include: plays/pre-validation-certificates.yml step="VAL - EPB-100-120"
-   include: plays/pre-validation-vcenter.yml step="VAL - EPB-100-130"
-   include: plays/pre-validation-vcenter-ntp.yml step="VAL - EPB-100-140"
-   include: plays/pre-validation-internet-access.yml step="VAL - EPB-100-150"
-   include: plays/pre-validation-vm-presence.yml step="VAL - EPB-100-160" ignore_errors=False

-
    name: '{{ step }} - Check if all Validation Passed'
    hosts: localhost
    gather_facts: no
    vars:
      step: "VAL - EPB-100-170"
    any_errors_fatal: True
    tasks:
      -
          name: "{{ step }} - Check if all Validation Passed"
          tags:
              -   "{{ step }} - Check if all Validation Passed"
          assert:
              that:
                  - validateADConfigurationResults.data is defined and validateADConfigurationResults.data.err_message is not defined and validateADConfigurationResults.data.status == True
                  - validateADTimeResults.data is defined and validateADTimeResults.data.err_message is not defined or validateADTimeResults.data.status == true
                  - validateUserCertResults.data is defined and not validateUserCertResults.data.err_message is defined and false not in validateUserCertResults.data|json_query('[].*[*][][].*[].*[]')
                  - false not in validateDNSResolutionResults.data|json_query('[].[ForwardLookup,ReverseLookup][]')
                  - hostvars['ehc_install_worker'].windowsInternetAccessResult.data is defined and hostvars['ehc_install_worker'].windowsInternetAccessResult.data.err_message is not defined and hostvars['ehc_install_worker'].windowsInternetAccessResult.data.status == true
                  # - validateScriptsResults.data is defined and not validateScriptsResults.data.err_message is defined and validateScriptsResults.data.status == true
                  - validateSMTPResults.data is defined and validateSMTPResults.data.err_message is not defined and validateSMTPResults.data.status == true
                  - validateArtefactChecksumsResults.data is defined and not validateArtefactChecksumsResults.data.err_message is defined and validateArtefactChecksumsResults.data.status == true
                  - validateSSOConfigResults.data is defined and not validateSSOConfigResults.data.err_message is defined and validateSSOConfigResults.data.status == true
                  - validatevCenterConfigurationResults.data is defined and not validatevCenterConfigurationResults.data.err_message is defined and validatevCenterConfigurationResults.data.status == true
                  - IvalidateNTPConfigResults.data is defined and not IvalidateNTPConfigResults.data.err_message is defined and IvalidateNTPConfigResults.data == true
              # msg: "All validation steps did not pass"

      -
          name: "{{ step }} - Check if NTP Validation Passed"
          tags:
              -   "{{ step }} - Check if all Validation Passed"
          assert:
              that:
                  - item.data is defined and item.data.err_message is not defined and item.data.status is defined and item.data.status == true
              msg: "All validation steps did not pass"
          with_items: '{{ validateNTPResults.results }}'

      -
          name: "{{ step }} - Validate Software Repository"
          tags:
              -   "{{ step }} - Check if all Validation Passed"
          assert:
              that:
                  - item.data is defined and item.data.status == true
              msg: "All validation steps did not pass"
          with_items: '{{ validateRepoAccessResults.results }}'

      -
          name: "{{ step }} - Validate Certificates Repository"
          tags:
              -   "{{ step }} - Check if all Validation Passed"
          assert:
              that:
                  - item.data is defined and item.data.status == true
              msg: "All validation steps did not pass"
          with_items: '{{ validateCertRepoAccessResults.results }}'
