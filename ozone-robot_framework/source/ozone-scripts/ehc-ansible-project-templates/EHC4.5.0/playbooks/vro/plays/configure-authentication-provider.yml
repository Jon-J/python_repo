# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Configure Authentication provider'
    hosts: '{{ vms }}'
    gather_facts: no
    any_errors_fatal: True
    tags:
                - '{{ step }} - Configure Authentication provider'
    tasks:
        -
            name: '{{ step }} - Pre-Validate Authentication provider'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateProviderAuthConfiguration
                method_params:
                    vroInfo: '{{ vroInfo }}'
                    authInfo: '{{ authInfo }}'
                    providerDetails: '{{ authProviderDetails }}'
            register: preValidateAuthProviderConfResults
            failed_when: not preValidateAuthProviderConfResults.data is defined or preValidateAuthProviderConfResults.data.err_message is defined or preValidateAuthProviderConfResults.data.validateProviderDetails|default(None) == false or preValidateAuthProviderConfResults.data.status|default(None) != 'OK'
            changed_when: preValidateAuthProviderConfResults.data is defined and not preValidateAuthProviderConfResults.data.err_message is defined and preValidateAuthProviderConfResults.data.validateProviderDetails|default(None) == true and preValidateAuthProviderConfResults.data.status|default(None) == 'OK'
            ignore_errors: preValidateAuthProviderConfResults.failed_when_result

        -
            name: '{{ step }} - Configure Authentication provider'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: configureAuthProvider
                method_params:
                    vCenterDict: '{{ vcenter }}'
                    vroInfo: '{{ vroInfo }}'
                    authInfo: '{{ authInfo }}'
                    providerDetails: '{{ authProviderDetails }}'

            register: configureAuthResult
            failed_when: not configureAuthResult.data is defined or configureAuthResult.data.err_message is defined
            changed_when: configureAuthResult.data is defined and not configureAuthResult.data.err_message is defined
            when: preValidateAuthProviderConfResults.failed_when_result

        -
            name: '{{ step }} - Wait for vRO node to be active'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: waitForServicesToBeUp
                method_params:
                    host: '{{ ansible_host }}'
                    username: '{{ vro_vm_username }}'
                    password: '{{ vrealize_orchestrator.vro_root_password }}'
                    timeout: '{{ service_up_timeout }}'
            register: result
            failed_when: not result.data is defined or result.data.err_message is defined or result.data != true
            changed_when: result.data is defined and not result.data.err_message is defined and result.data == true
            when: configureAuthResult is defined and configureAuthResult|changed

        -
            name: '{{ step }} - Validate Authentication provider'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateProviderAuthConfiguration
                method_params:
                    vroInfo: '{{ vroInfo }}'
                    authInfo: '{{ authInfo }}'
                    providerDetails: '{{ authProviderDetails }}'
            register: result
            failed_when: not result.data is defined or result.data.err_message is defined or result.data.validateProviderDetails|default(None) == false or result.data.status|default(None) != 'OK'
            changed_when: result.data is defined and not result.data.err_message is defined and result.data.validateProviderDetails|default(None) == true and result.data.status|default(None) == 'OK'
            when: not configureAuthResult|skipped