# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

---
-
    name: '{{ step }} - Pre Validation - Repository'
    hosts: localhost
    gather_facts: no
    any_errors_fatal: True
    tasks:
        -
            name: '{{ step }} - Validate Software Repository'
            tags:
                - '{{ step }} - Validate Software Repository'

            ehc_script_agent:
                package_name: preDeploymentValidation
                module_name: repoValidation
                method_name: validateRepoAccess
                method_params:
                    repoPath: '{{ sw_repository_manifest.base_path | win_splitdrive | first }}'
                    randomFile: '{{ sw_repository_manifest.base_path | win_splitdrive | last }}/{{ item.value.relative_path }}/{{ item.value.file_name }}'
            register: validateRepoAccessResults
            failed_when: not validateRepoAccessResults.data is defined or validateRepoAccessResults.data.err_message is defined or validateRepoAccessResults.data.status == false
            changed_when: validateRepoAccessResults.data is defined and validateRepoAccessResults.data.status == true
            with_dict: '{{ sw_repository_manifest.content }}'
            ignore_errors: '{{ ignore_errors|default(False) }}'

        -
            name: '{{ step }} - Validate Certificates Repository'
            tags:
                - '{{ step }} - Validate Certificates Repository'

            ehc_script_agent:
                package_name: preDeploymentValidation
                module_name: repoValidation
                method_name: validateRepoAccess
                method_params:
                    repoPath: '{{ item | win_splitdrive | first }}'
                    randomFile: '{{ item | win_splitdrive | last  }}'
            register: validateCertRepoAccessResults
            failed_when: not validateCertRepoAccessResults.data is defined or validateCertRepoAccessResults.data.err_message is defined or validateCertRepoAccessResults.data.status == false
            changed_when: validateCertRepoAccessResults.data is defined and validateCertRepoAccessResults.data.status == true
            with_items: "{{ repository|json_query('*.* | []') }}"
            ignore_errors: '{{ ignore_errors|default(False) }}'