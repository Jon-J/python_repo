Document:

The xstream cloud module allows you to manage xstream

Reference url:
	https://docs.saltstack.com/en/2017.7/topics/cloud/index.html

DEPENDENCIES
	pyVmomi Python Module

	yaml module

	python-requests module

	salt-cloud and salt-master installtions

CONFIGURATION:

	To use this module, set up the xstream URL, username and password in the cloud configuration at /etc/salt/cloud.providers or /etc/salt/cloud.providers.d/xstream_provider.conf:

Example:
 
	xstream-config:
	 driver: xstream
	 user: '1a@VSFL.LAB'
	 password: 'Password1'
	 url: '10.100.26.90'
	 verify_ssl: False

PROFILES:

	Set up an initial profile at /etc/salt/cloud.profiles or /etc/salt/cloud.profiles.d/vmware.conf:, with the VM tempalate and other details of VM.

provider:

	Enter the name that was specified when the cloud provider config was created.

script:

	If we want to install salt on VM, we need to execute the bootstrap-salt script, by passing the parameter (script: bootstrap-salt)

script_args:

	If we are cloning from a VM that already has salt installed on it, we should specify script_args: -C -F on your profile. Those two arguments combined will skip the salt installation step in the bootstrap script and only run the configuration function and will also allow copied files to overwrite existing files (config, init.d, etc). This will make sure new keys are generated for the new minion and will overwrite the /etc/salt/minion config file.
Example:

	xstream-centos:
	 provider: xstream-config
	 location: 'VSLABS'
	 size: small
	 ssh_host: '10.100.249.55'
	 port:  22
	 ssh_username: 'root'
	 password: 'Password1'
	 script: bootstrap-salt
	 script_args: -C -F
	 ip: '10.100.249.80'
	 deploy: True
	 minion:
	   master: 10.100.26.124
	 vm_template:
	   CustomerDefinedName: sheetal_vm2
	   SourceTemplateID: 3e98b32d-213e-487a-a414-66b34fbc9aa8
	   Hypervisor:
		 Site:
		  SiteID: 69d29e4b-ce66-66b9-a07d-c4612616bb0f
 

Driver:

We need to write the xstream drive wrapper in following directory /usr/lib/python2.7/site-packages/salt/cloud/clouds/

example:

	def create(vm_):
		'''
		Create the VM on the Xstream, by fetching the template info from profiles file.
		'''
		__utils__['cloud.fire_event'](
			'event',
			'starting create',
			'salt/cloud/{0}/creating'.format(vm_['name']),
			args=__utils__['cloud.filter_event']('creating', vm_, ['name', 'profile', 'provider', 'driver']),
			sock_dir=__opts__['sock_dir'],
			transport=__opts__['transport']
		)

		vm_name = config.get_cloud_config_value(
			'name', vm_, __opts__, default=None)
		
CLI commands:

Execute the below commands to deploy  VMs on xstream or vmware, using profile file.

	salt-cloud -p vCenter-centos vijay_vm5 -l debug

	salt-cloud -p xstream-centos vijay_vm4 -l debug

We can execute any driver module directly, by using providers file 

	salt-cloud -f create_vm_on_xstream xstream-config host=vm_vijay -l debug

	salt-cloud -f prov_vm xstream-config 







