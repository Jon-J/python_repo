# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VRLI - {{ step }} - Configuring Log Insight Agents'
    hosts: log_insight
    gather_facts: no
    vars:
      step: EPB-650-130
    any_errors_fatal: True
    tags:
                - 'VRLI - {{ step }} - Configuring Log Insight Agents'
    tasks:
      -
            name: 'VRLI - {{ step }} - Create jsonFile'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightAgentGroups
                method_name: generateJsonForConfigLIAG
                method_params:
                  agentGroup: '{{ item }}'
                  jsonFile:
                    name: '{{ item.file_name }}'
                    path: ''
            register: generateJsonForConfigLIAGResults
            failed_when: not generateJsonForConfigLIAGResults.data is defined or generateJsonForConfigLIAGResults.data.err_message is defined or not generateJsonForConfigLIAGResults.data.status == true
            changed_when: generateJsonForConfigLIAGResults.data is defined and generateJsonForConfigLIAGResults.data.err_message is not defined and generateJsonForConfigLIAGResults.data.status == true
            with_items: '{{ log_insight_group_map }}'


      -
            name: 'VRLI - {{ step }} - Validate Log insight Agents Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightAgentGroups
                method_name: validateLogInsightAgentGroups
                method_params:
                  logInsightDict: '{{ hostvars["log_insight"].logInsightCred }}'
                  agentGroupName: '{{ item.name }}'
            register: validateResults
            failed_when: not validateResults.data is defined or validateResults.data.err_message is defined or not validateResults.data.status == true
            changed_when: validateResults.data is defined and validateResults.data.err_message is not defined and validateResults.data.status == true
            with_items: '{{ log_insight_group_map }}'
            ignore_errors: validateResults.failed_when_result

      -
            name: 'VRLI - {{ step }} - Configuring Log Insight Agents'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightAgentGroups
                method_name: createLogInsightAgentGroups
                method_params:
                  jsonFile:
                    name: '{{ item.0.file_name }}'
                    path: ''
                  logInsightDict: '{{ hostvars["log_insight"].logInsightCred }}'
            register: createLogInsightAgentGroupsResults
            failed_when: not createLogInsightAgentGroupsResults.data is defined or createLogInsightAgentGroupsResults.data.err_message is defined or not createLogInsightAgentGroupsResults.data.status == true
            changed_when: createLogInsightAgentGroupsResults.data is defined and createLogInsightAgentGroupsResults.data.err_message is not defined and createLogInsightAgentGroupsResults.data.status == true
            with_together:
              -   '{{ log_insight_group_map }}'
              -   '{{ validateResults.results }}'
            when: item.1.failed_when_result
            ignore_errors: True

      -
            name: 'VRLI - {{ step }} - Post Validate Log insight Agents Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: logInsightAgentGroups
                method_name: validateLogInsightAgentGroups
                method_params:
                  logInsightDict: '{{ hostvars["log_insight"].logInsightCred }}'
                  agentGroupName: '{{ item.0.name }}'
            register: postValidateResults
            failed_when: not postValidateResults.data is defined or postValidateResults.data.err_message is defined or not postValidateResults.data.status == true
            changed_when: postValidateResults.data is defined and postValidateResults.data.err_message is not defined and postValidateResults.data.status == true
            with_together:
              -   '{{ log_insight_group_map }}'
              -   '{{ createLogInsightAgentGroupsResults.results }}'
            when: not item.1|skipped