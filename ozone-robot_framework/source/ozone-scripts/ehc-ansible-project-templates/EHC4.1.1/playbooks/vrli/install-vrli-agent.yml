# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Install Log Insight Agent'
    hosts: '{{ vms }}'
    gather_facts: no
    serial: '{{ serial|default(1) }}'
    any_errors_fatal: True
    tags:
                - '{{ step }} - Install Log Insight Agent'
    tasks:
    # May be validation is not required at this point as it fails due to directory not found in /var/lib/loginsight-agent/liagent-effective.ini file
#        -
#            name: '{{ step }} - Validate Install Log Insight Agent'
#            delegate_to: localhost
#            ehc_script_agent:
#                package_name: vrli
#                module_name: monitoringComponents
#                method_name: validateLinuxAgentInstallPreConfig
#                method_params:
#                    agentInfo: "vrli/agentInfoLinux.json"
#                    logInsightHost: '{{ hostvars["log_insight"].vmDict.host }}'
#                    vCenterConfDict: '{{ vcenter }}'
#                    vMDict: '{{ vcenter | combine({"vmusername":"root"}) }}'
#            register: validateLinuxAgentInstallationResults
#            failed_when: not validateLinuxAgentInstallationResults.data is defined or validateLinuxAgentInstallationResults.data.err_message is defined or validateLinuxAgentInstallationResults.data == false
#            changed_when: validateLinuxAgentInstallationResults.data is defined and not validateLinuxAgentInstallationResults.data.err_message is defined and validateLinuxAgentInstallationResults.data == true
#            ignore_errors: validateLinuxAgentInstallationResults.failed_when_result

        -
            name: '{{ step }} - Install Log Insight Agent'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrli
                module_name: IAgentManagement
                method_name: installAgent
                method_params:
                    liAgentFilepath: "{{ log_insight_agent_file_path }}"
                    logInsightHost: '{{ hostvars["log_insight"].vmDict.host }}'
                    vCenterConfDict: '{{ vcenter }}'
                    # TODO: Check and make sure vCenter administrator password and root password are same.
                    vMDict: '{{ vmDict }}'
            register: linuxAgentInstallationResults
            failed_when: not linuxAgentInstallationResults.data is defined or linuxAgentInstallationResults.data.err_message is defined or linuxAgentInstallationResults.data == false
            changed_when: linuxAgentInstallationResults.data is defined and not linuxAgentInstallationResults.data.err_message is defined and linuxAgentInstallationResults.data == true

            retries: 2
            delay: 10
            until: linuxAgentInstallationResults.data is defined and not linuxAgentInstallationResults.data.err_message is defined and linuxAgentInstallationResults.data == true
            # when: validateLinuxAgentInstallationResults.failed_when_result

# Note: Need validation for windows agent install as well
#        -
#            name: '{{ step }} - Post Validate Install Log Insight Agent'
#            tags:
#                - '{{ step }} - Install Log Insight Agent'
#            delegate_to: localhost
#            ehc_script_agent:
#                package_name: vrli
#                module_name: monitoringComponents
#                method_name: validateLinuxAgentInstallPreConfig
#                method_params:
#                    agentInfo: "vrli/agentInfoLinux.json"
#                    logInsightHost: '{{ hostvars["log_insight"].vmDict.host }}'
#                    vCenterConfDict: '{{ vcenter }}'
#                    vMDict: '{{ vcenter | combine({"vmusername":"root"}) }}'
#            register: postValidateLinuxAgentInstallationResults
#            failed_when: not postValidateLinuxAgentInstallationResults.data is defined or postValidateLinuxAgentInstallationResults.data.err_message is defined or postValidateLinuxAgentInstallationResults.data == false
#            changed_when: postValidateLinuxAgentInstallationResults.data is defined and not postValidateLinuxAgentInstallationResults.data.err_message is defined and postValidateLinuxAgentInstallationResults.data == true
#            when: not linuxAgentInstallationResults|skipped