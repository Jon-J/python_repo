# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VROPS - {{ step }} - Poll vROPS'
    hosts: vrops_manager
    gather_facts: no
    any_errors_fatal: True
    vars:
      step: EPB-500-020
    tasks:
        -
            name: 'VROPS - {{ step }} - Poll vROPS'
            tags:
                - 'VROPS - EPB-500-030 - Initial vROps Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrops
                module_name: pollvROps
                method_name: pollvROPsNode
                method_params:
                    vROPsHost: '{{ ansible_host }}'
            register: pollvROPsResults
            failed_when: not pollvROPsResults.data is defined or pollvROPsResults.data.err_message is defined or not pollvROPsResults.data.status == true
            changed_when: pollvROPsResults.data is defined and pollvROPsResults.data.err_message is not defined and pollvROPsResults.data.status == true
            until: pollvROPsResults.data is defined and pollvROPsResults.data.err_message is not defined and pollvROPsResults.data.status == true
            retries: '{{ poll_retries }}'
            delay: '{{ poll_delay }}'

-
    name: 'VROPS - {{ step }} - Configure and Validate vROPs Configuration'
    hosts: vrops_manager
    gather_facts: no
    any_errors_fatal: True
    vars:
      step: EPB-500-030
    tags:
                - 'VROPS - {{ step }} - Initial vROps Configuration'
    tasks:
        -
            name: 'VROPS - {{ step }} - Pre-Validate Initial vROPs Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrops
                module_name: configvROPs
                method_name: validatevROPsconfiguration
                method_params:
                    vROPsDict: '{{ vROPsDict }}'
                    configDict: '{{ initialConfig }}'
            register: preValidateInitvROPsConfig
            failed_when: not preValidateInitvROPsConfig.data is defined or preValidateInitvROPsConfig.data.err_message is defined or not preValidateInitvROPsConfig.data == true
            changed_when: preValidateInitvROPsConfig.data is defined and preValidateInitvROPsConfig.data.err_message is not defined and preValidateInitvROPsConfig.data == true
            ignore_errors: True
        -
            name: 'VROPS - {{ step }} - Initial vROps Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrops
                module_name: configvROPs
                method_name: configvRops
                method_params:
                    vRopsHost: '{{host_address.vrops_manager.fqdn}}'
                    configDict: '{{ initialConfig }}'
            register: vROPsInitialConfigResults
            failed_when: not vROPsInitialConfigResults.data is defined or vROPsInitialConfigResults.data.err_message is defined or not vROPsInitialConfigResults.data == true
            changed_when: vROPsInitialConfigResults.data is defined and vROPsInitialConfigResults.data.err_message is not defined and vROPsInitialConfigResults.data == true
            when: preValidateInitvROPsConfig.failed_when_result
            retries: 3
            delay: 15
            until: vROPsInitialConfigResults.data is defined and vROPsInitialConfigResults.data.err_message is not defined and vROPsInitialConfigResults.data == true
        -
            name: 'VROPS - {{ step }} - Validate Initial vROps Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrops
                module_name: configvROPs
                method_name: validatevROPsconfiguration
                method_params:
                    vROPsDict: '{{ vROPsDict }}'
                    configDict: '{{ initialConfig }}'
            register: ValidateInitvROPsConfig
            failed_when: not ValidateInitvROPsConfig.data is defined or ValidateInitvROPsConfig.data.err_message is defined or not ValidateInitvROPsConfig.data == true
            changed_when: ValidateInitvROPsConfig.data is defined and ValidateInitvROPsConfig.data.err_message is not defined and ValidateInitvROPsConfig.data == true
            when: vROPsInitialConfigResults is defined and not vROPsInitialConfigResults|skipped
