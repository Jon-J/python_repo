# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

vmname: '{{ inventory_hostname in host_address and host_address[inventory_hostname].vmname or "localhost" }}'
ansible_host: '{{ inventory_hostname in host_address and host_address[inventory_hostname].fqdn or "localhost" }}'
ansible_host_ip: '{{ inventory_hostname in host_address and host_address[inventory_hostname].ip or "127.0.0.1" }}'

ansible_connection: ssh


ovaType: 'vRealize Log Insight'
ovaVersion: '3.6'

ova_manifest_lookup: '{{ sw_repository_manifest.content.log_insight_ova }}'
ovaSource: '{{ sw_repository_manifest.base_path }}/{{ ova_manifest_lookup.relative_path }}/{{ ova_manifest_lookup.file_name }}'

ovaConfigDict:
    size: '{{ vrealize_log_insight.ova_size }}'
    network: '{{   vcenter_network   }}'
    hostname: '{{ ansible_host }}'
    ip: '{{ ansible_host_ip }}'
    gateway: '{{ common.management_network_gateway }}'
    netmask: '{{ common.management_network_netmask }}'
    dns: '{{ common.dns_server_ip }}'
    root_password: '{{ vrealize_log_insight.root_password }}'
    # TODO Check this certificate path. Should this be the generated certificate?
    ssh_pub_key: '{{ service_cert_file_path.vrli_svc }}'

loginsight_port: 9543

vmDict:
    host: '{{ ansible_host }}'
    vmName: '{{ vmname }}'
    vmname: '{{ vmname }}'
    username: root
    password: '{{ vrealize_log_insight.root_password }}'
    vmusername: root
    vmpassword: '{{ vrealize_log_insight.root_password }}'
    port: '{{ loginsight_port }}'

logInsightCred:
    host: '{{host_address.log_insight.fqdn}}'
    username: admin
    password: '{{vrealize_log_insight.admin_password}}'
    port: '{{ loginsight_port }}'

vcenter_credentials_vrli:
    host: '{{ vcenter.fqdn }}'
    username: '{{ ad_user.app_logi_vcenter.username }}@{{ ad_domain }}'
    password: '{{ ad_user.app_logi_vcenter.password }}'

loginsightConfig:
    adminPassword: '{{ vrealize_log_insight.admin_password }}'
    adminEmail: '{{ vrealize_log_insight.admin_email }}'
    smtp:
        username: '{{ smtp.username }}'
        password: '{{ smtp.password }}'
        host: '{{ smtp.server }}'
        port: '{{ smtp.port }}'
        sslAuth: '{{ smtp.ssl }}'
        tls: '{{ smtp.enable_starttls }}'
        defaultSender: '{{ smtp.sender_address }}'
    license: '{{  license_key.vrealize_log_insight }}'
    notificationEmails: '{{ vrealize_log_insight.notification_emails_csv }}'
    ntpList:  '{{ common.ntp_servers_comma_separated.split(",") }}'

# Note: These files are placed along with the code and defined in constants file
# This may need to be refactored in the future - both python code and playbooks
contentPackList:
    - EMC-VNX Unified_v1.0
    - VMware-vRA-7-v1.0
    - VMware-Orchestrator-v1.1
    - VMware-vRops 6.x-v1.7
    - VMware-VSAN-v2.0
    - VMware-vSphere-v2.5

log_insight_group_map:
  -
    name: vra_7_win
    info: vra_7_win
    hostList: "{% set hosts = [] %}{% for host in groups['vra_iaas_servers'] %}{{ hosts.append(hostvars[host].ansible_host) }}{% endfor %}{{hosts}}"
    type: vra_7_win
    file_name: agentInfoVraWin.json

  -
    name: vra_7_linux
    info: vra_7_linux
    hostList: "{% set hosts = [] %}{% for host in groups['vra_servers'] %}{{ hosts.append(hostvars[host].ansible_host) }}{% endfor %}{{hosts}}"
    type: vra_7_linux
    file_name: agentInfoVraLinux.json

  -
    name: vsphere_6_vcenter_linux_essential
    info: vsphere_6_vcenter_linux_essential
    hostList: "{% set hosts = [] %}{% for host in groups['vcenter_servers'] %}{{ hosts.append(hostvars[host].ansible_host) }}{% endfor %}{{hosts}}"
    type: vsphere_6_vcenter_linux_essential
    file_name: agentInfoVcenter.json

  -
    name: vro_7
    info: vro_7
    hostList: "{% set hosts = [] %}{% for host in groups['vro_servers'] %}{{ hosts.append(hostvars[host].ansible_host) }}{% endfor %}{{hosts}}"
    type: vro_7
    file_name: agentInfoVro.json

  -
    name: vrops_6
    info: vrops_6
    hostList: "{% set hosts = [] %}{% for host in groups['vrops_servers'] %}{{ hosts.append(hostvars[host].ansible_host) }}{% endfor %}{{hosts}}"
    type: vrops_6
    file_name: agentInfoVrops.json

log_insight_linux_agent_file: '{{ sw_repository_manifest.base_path }}/{{ sw_repository_manifest.content.log_insight_linux_agent_file.relative_path }}/{{ sw_repository_manifest.content.log_insight_linux_agent_file.file_name }}'
log_insight_windows_agent_file: '{{ sw_repository_manifest.base_path }}/{{ sw_repository_manifest.content.log_insight_windows_agent_file.relative_path }}/{{ sw_repository_manifest.content.log_insight_windows_agent_file.file_name }}'