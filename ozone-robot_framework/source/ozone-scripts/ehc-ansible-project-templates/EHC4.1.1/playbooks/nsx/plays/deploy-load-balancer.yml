# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'NSX - {{ step }} - Deploy Load Balancer'
    hosts: '{{ vms }}'
    tags:
        - 'NSX - {{ step }} - Deploy Load Balancer'
    tasks:
        -
            name: 'NSX - {{ step }} - Validate Load Balancer Deployment'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateDeployLoadBalancer
                method_params:
                    nsxManager: '{{ nsxManager }}'
                    edgeName: '{{ nsx_load_balancer_load_balancer_name }}'
                    deployParameters: '{{ loadBalancerDeployParameters }}'
                module_name: configureLoadBalancer
                package_name: nsx
            register: preValidateDeployLBResults
            failed_when: not preValidateDeployLBResults.data is defined or preValidateDeployLBResults.data.err_message is defined or not preValidateDeployLBResults.data.status is defined or preValidateDeployLBResults.data.status == false
            changed_when: preValidateDeployLBResults.data is defined and not preValidateDeployLBResults.data.err_message is defined and preValidateDeployLBResults.data.status == true
            ignore_errors: True

        -
            name: 'NSX - {{ step }} - Deploy Load Balancer'
            delegate_to: localhost
            ehc_script_agent:
                method_name: deployLoadBalancer
                method_params:
                    nsxManager: '{{ nsxManager }}'
#                    vCenterDict: '{{ vcenter | combine(ehc_nsx_ent_admin) }}'
                    vCenterDict: '{{ vcenter }}'
                    deployParameters: '{{ loadBalancerDeployParameters }}'
                module_name: configureLoadBalancer
                package_name: nsx
            register: deployLoadBalancerResult
            failed_when: not deployLoadBalancerResult.data is defined or deployLoadBalancerResult.data.err_message is defined or deployLoadBalancerResult.data.status == false
            changed_when: deployLoadBalancerResult.data is defined and not deployLoadBalancerResult.data.err_message is defined and deployLoadBalancerResult.data.status == true
            when: preValidateDeployLBResults.failed_when_result

        -
            name: 'NSX - {{ step }} - Post-Validate Load Balancer Deployment'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateDeployLoadBalancer
                method_params:
                    nsxManager: '{{ nsxManager }}'
                    edgeName: '{{ nsx_load_balancer_load_balancer_name }}'
                    deployParameters: '{{ loadBalancerDeployParameters }}'
                module_name: configureLoadBalancer
                package_name: nsx
            register: validateDeployLBResults
            failed_when: not validateDeployLBResults.data is defined or validateDeployLBResults.data.err_message is defined or not validateDeployLBResults.data.status is defined or validateDeployLBResults.data.status == false
            changed_when: validateDeployLBResults.data is defined and not validateDeployLBResults.data.err_message is defined and validateDeployLBResults.data.status == true
            when: not deployLoadBalancerResult|skipped


