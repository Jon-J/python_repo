# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Replace vRO SSL Certificates'
    hosts: '{{ vms }}'
    gather_facts: no
    any_errors_fatal: True
    tags:
                - '{{ step }} - Replace vRO SSL Certificates'
    tasks:
        -
            name: '{{ step }} - Pre-Validate Replace vRO SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: importSSLCertificate
                method_name: validateSSLCert
                method_params:
                    vroDict: '{{ vroInfo }}'
                    vroCertFilePath: '{{ vroCertPath }}'
            register: preValidateSSLCerts
            failed_when: not preValidateSSLCerts.data is defined or preValidateSSLCerts.data.err_message is defined or preValidateSSLCerts.data == false
            changed_when: preValidateSSLCerts.data is defined and not preValidateSSLCerts.data.err_message is defined and preValidateSSLCerts.data == true
            ignore_errors: preValidateSSLCerts.failed_when_result

        -
            name: '{{ step }} - Replace vRO SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: importSSLCertificate
                method_name: importSSLCert
                method_params:
                    vroDict: '{{ vroInfo }}'
                    vroCertFilePath: '{{ vroCertPath }}'
            register: importSSLResult
            failed_when: not importSSLResult.data is defined or importSSLResult.data.err_message is defined or importSSLResult.data == false
            changed_when: importSSLResult.data is defined and not importSSLResult.data.err_message is defined and importSSLResult.data == true
            when: preValidateSSLCerts.failed_when_result

        -
            name: '{{ step }} - Shutdown vRealize Orchestrator'
            delegate_to: localhost
            ehc_script_agent:

                package_name: common
                module_name: IVMManagement
                method_name: powerOffVM
                method_params:
                    vCenterDict: '{{ vcenter }}'
                    vmDict:
                        vmname: '{{ vmname }}'

            register: result
            failed_when: result.data is defined and result.data.err_message is defined
            changed_when: result.data is defined and not result.data.err_message is defined
            when: importSSLResult is defined and importSSLResult|changed

        -
            name: '{{ step }} - Start vRealize Orchestrator'
            delegate_to: localhost
            ehc_script_agent:
                package_name: common
                module_name: IVMManagement
                method_name: powerOnVM
                method_params:
                    vCenterDict: '{{ vcenter }}'
                    vmDict:
                        vmname: '{{ vmname }}'
            register: result
            failed_when: result.data is defined and result.data.err_message is defined
            changed_when: result.data is defined and not result.data.err_message is defined
            when: importSSLResult is defined and importSSLResult|changed

        -
            name: '{{ step }} - Wait for node to be active'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: waitForServicesToBeUp
                method_params:
                    host: '{{ ansible_host }}'
                    username: '{{ vro_vm_username }}'
                    password: '{{ vrealize_orchestrator.vro_root_password }}'
                    timeout: '{{ service_up_timeout }}'
            register: result
            failed_when: not result.data is defined or result.data.err_message is defined or result.data != true
            changed_when: result.data is defined and not result.data.err_message is defined and result.data == true
            when: importSSLResult is defined and importSSLResult|changed

        -
            name: '{{ step }} - Validate Replace vRO SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: importSSLCertificate
                method_name: validateSSLCert
                method_params:
                    vroDict: '{{ vroInfo }}'
                    vroCertFilePath: '{{ vroCertPath }}'
            register: validateSSLCerts
            failed_when: not validateSSLCerts.data is defined or validateSSLCerts.data.err_message is defined or validateSSLCerts.data == false
            changed_when: validateSSLCerts.data is defined and not validateSSLCerts.data.err_message is defined and validateSSLCerts.data == true
            when: not importSSLResult|skipped