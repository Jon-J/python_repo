# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: '{{ step }} - Configure and Validate Initial vRO Settings'
    hosts: vro_servers
    gather_facts: no
    any_errors_fatal: True
    tags:
                - '{{ step }} - Configure Initial vRO Settings'
    tasks:
        -
            name: '{{ step }} - Pre-Validate Initial vRO Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateInitialVROConfiguration
                method_params:
                    vcenterConfiguration: '{{ vcenter }}'
                    vmConfiguration:
                        vmName: '{{ vmname }}'
                        host: '{{ ansible_host_ip }}'
                        vmUsername: '{{ vro_vm_username }}'
                        vmPassword: '{{ vrealize_orchestrator.vro_root_password }}'
                        osType: '{{ vm_type_linux }}'
                        osFlavor: '{{ vrealize_vm_flavor }}'
                        osVersion: '{{ vrealize_vm_os_version }}'
                        vroNewPassword: '{{ vrealize_orchestrator.vro_root_password }}'
                    ntpServerList: '{{ ntp_servers }}'
                    timeZone: '{{ linux_timezone }}'
            register: preValidateInitVroConfig
            failed_when: not preValidateInitVroConfig.data is defined or preValidateInitVroConfig.data.NTP.status == false or preValidateInitVroConfig.data.Timezone.status == false or preValidateInitVroConfig.data.rootPassword.status == false or preValidateInitVroConfig.data.rootSSH.status == false or preValidateInitVroConfig.data.sshService.status == false
            changed_when: preValidateInitVroConfig.data is defined and preValidateInitVroConfig.data.NTP.status == true and preValidateInitVroConfig.data.Timezone.status == true and preValidateInitVroConfig.data.rootPassword.status == true and preValidateInitVroConfig.data.rootSSH.status == "True" and result.data.sshService.status == "True"
            ignore_errors: preValidateInitVroConfig.failed_when_result

        -
            name: '{{ step }} - Configure Initial vRO Settings'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: initializeVROConfiguration
                method_params:
                    vcenterConfiguration: '{{ vcenter }}'
                    vmConfiguration:
                        vmName: '{{ vmname }}'
                        host: '{{ ansible_host_ip }}'
                        vmUsername: '{{ vro_vm_username }}'
                        vmPassword: '{{ vrealize_orchestrator.vro_root_password }}'
                        osType: '{{ vm_type_linux }}'
                        osFlavor: '{{ vrealize_vm_flavor }}'
                        osVersion: '{{ vrealize_vm_os_version }}'
                        vroNewPassword: '{{vrealize_orchestrator.vro_root_password}}'
                    ntpServerList: '{{ ntp_servers }}'
                    timeZone: '{{ linux_timezone }}'
            register: vroInitialConfigResult
            failed_when: not vroInitialConfigResult.data is defined or vroInitialConfigResult.data.enableSSH.status == false or vroInitialConfigResult.data.setPassword.status == false
            changed_when: vroInitialConfigResult.data is defined and vroInitialConfigResult.data.enableSSH.status == true and vroInitialConfigResult.data.setPassword.status == true
            when: preValidateInitVroConfig.failed_when_result

        -
            name: '{{ step }} - Validate Initial vRO Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateInitialVROConfiguration
                method_params:
                    vcenterConfiguration: '{{ vcenter }}'
                    vmConfiguration:
                        vmName: '{{ vmname }}'
                        host: '{{ ansible_host_ip }}'
                        vmUsername: '{{ vro_vm_username }}'
                        vmPassword: '{{ vrealize_orchestrator.vro_root_password }}'
                        osType: '{{ vm_type_linux }}'
                        osFlavor: '{{ vrealize_vm_flavor }}'
                        osVersion: '{{ vrealize_vm_os_version }}'
                        vroNewPassword: '{{ vrealize_orchestrator.vro_root_password }}'
                    ntpServerList: '{{ ntp_servers }}'
                    timeZone: '{{ linux_timezone }}'
            register: validateVroInitConfigResult
            failed_when: not validateVroInitConfigResult.data is defined or validateVroInitConfigResult.data.NTP.status == false or validateVroInitConfigResult.data.Timezone.status == false or validateVroInitConfigResult.data.rootPassword.status == false or validateVroInitConfigResult.data.rootSSH.status == false or validateVroInitConfigResult.data.sshService.status == false
            changed_when: validateVroInitConfigResult.data is defined and validateVroInitConfigResult.data.NTP.status == true and validateVroInitConfigResult.data.Timezone.status == true and validateVroInitConfigResult.data.rootPassword.status == true and validateVroInitConfigResult.data.rootSSH.status == "True" and validateVroInitConfigResult.data.sshService.status == "True"
            when: not vroInitialConfigResult|skipped