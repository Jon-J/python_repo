# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'NSX - {{ step }} - Replace SSL Certificates'
    hosts: '{{ vms }}'
    tags:
                - 'NSX - {{ step }} - Import SSL Certificates'
    tasks:
        -
            name: 'NSX - {{ step }} - Validate SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateNSXSSLCertificate
                method_params:
                    nsxDict: '{{ nsxManager }}'
                    certDict:
                        nsxPemCertFilePath: '{{ repository.certs.nsx_cert_path }}'
                    pscConfigurationDetails:
                        ssoLookupServiceUrl: 'https://{{ psc01Dict.fqdn }}:443/lookupservice/sdk'
                        ssoAdminUsername: '{{ ad_user.app_nsx_sso.username }}@{{ ad_domain }}'
                        ssoAdminUserpassword: '{{ ad_user.app_nsx_sso.password }}'
                    vCenterDict:
                        ipAddress: '{{ vcenter.fqdn }}'
                        userName: '{{ ad_user.app_nsx_vcenter.username }}@{{ ad_domain }}'
                        password: '{{ ad_user.app_nsx_vcenter.password }}'
                        # pluginDownloadServer: ""
                        # pluginDownloadPort: '443'
                module_name: sslCertificateNSX
                package_name: nsx
            register: validateSSLResults
            changed_when: validateSSLResults.data is defined and not validateSSLResults.data.err_message is defined and validateSSLResults.data.status == true
            failed_when: not validateSSLResults.data is defined or validateSSLResults.data.err_message is defined or validateSSLResults.data.status == false
            ignore_errors: True

        -
            name: 'NSX - {{ step }} - Import SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                method_name: importNSXCertificate
                method_params:
                    nsxDict: '{{ nsxManager }}'
                    # TODO: Look into these parameters
                    certDict:
                        nsxCertFilePath: '{{ service_cert_file_path.nsx_manager }}'
                        nsxCertPfxPassword: '{{ nsx_manager_info.nsx_pfx_password }}'
                        vCenterCertFilePath: '{{ service_cert_file_path.vcenter_machinessl_svc }}'
                        # vCenterCertFilePath: '{{ service_cert_file_path.vcenter_vsphere_webclient_svc }}'
                        # TODO: Should these be new PSC generated certificates?
                        # TODO: All PSCs or just one ?
                        # pscCertFilePath: '{{ service_cert_file_path.psc01_vsphere_webclient_svc }}'
                        pscCertFilePath: '{{ service_cert_file_path.psc01_machinessl_svc }}'
                    vCenterDict:
                        ipAddress: '{{ vcenter.fqdn }}'
                        userName: '{{ vcenter.username }}'
                        password: '{{ vcenter.password }}'
                        # pluginDownloadServer: '{{ vcenter.ip }}'
                        # pluginDownloadPort: '443'
                    vCenterNsxDict:
                        ipAddress: '{{ vcenter.fqdn }}'
                        userName: '{{ ad_user.app_nsx_vcenter.username }}@{{ ad_domain }}'
                        password: '{{ ad_user.app_nsx_vcenter.password }}'
#                        userName: '{{ vcenter.username }}'
#                        password: '{{ vcenter.password }}'
                        # pluginDownloadServer: '{{ vcenter.ip }}'
                        # pluginDownloadPort: '443'
                    pscConfigurationDetails:
                        ssoLookupServiceUrl: 'https://{{ psc01Dict.fqdn }}:443/lookupservice/sdk'
                        ssoAdminUsername: '{{ ad_user.app_nsx_sso.username }}@{{ ad_domain }}'
                        ssoAdminUserpassword: '{{ ad_user.app_nsx_sso.password }}'
                    vmName: "{{ vmname }}"
                module_name: sslCertificateNSX
                package_name: nsx
            register: importSSLResults
            failed_when: not importSSLResults.data is defined or importSSLResults.data.err_message is defined or importSSLResults.data.status == false
            changed_when: importSSLResults.data is defined and not importSSLResults.data.err_message is defined and importSSLResults.data.status == true
            retries: 2
            delay: 10
            until: importSSLResults.data is defined and not importSSLResults.data.err_message is defined and importSSLResults.data.status == true
            when: validateSSLResults.failed_when_result

        -
            name: 'NSX - {{ step }} - Post Validate SSL Certificates'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validateNSXSSLCertificate
                method_params:
                    nsxDict: '{{ nsxManager }}'
                    certDict:
                        nsxPemCertFilePath: '{{ repository.certs.nsx_cert_path }}'
                    pscConfigurationDetails:
                        ssoLookupServiceUrl: 'https://{{ psc01Dict.fqdn }}:443/lookupservice/sdk'
                        ssoAdminUsername: '{{ ad_user.app_nsx_sso.username }}@{{ ad_domain }}'
                        ssoAdminUserpassword: '{{ ad_user.app_nsx_sso.password }}'
                    vCenterDict:
                        ipAddress: '{{ vcenter.fqdn }}'
                        userName: '{{ ad_user.app_nsx_vcenter.username }}@{{ ad_domain }}'
                        password: '{{ ad_user.app_nsx_vcenter.password }}'
                module_name: sslCertificateNSX
                package_name: nsx
            register: validateSSLResults
            changed_when: validateSSLResults.data is defined and not validateSSLResults.data.err_message is defined and validateSSLResults.data.status == true
            failed_when: not validateSSLResults.data is defined or validateSSLResults.data.err_message is defined or validateSSLResults.data.status == false
            when: not importSSLResults|skipped
