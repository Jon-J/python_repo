# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

---
# Playbook file: deployPSC.yml
-
    name: '{{ step }} - {{ description }}'
    hosts: '{{ vms }}'
    gather_facts: no
    any_errors_fatal: True
    tasks:
        -
            name: '{{ step }} - Pre-Validate {{ description }}'
            tags:
                - '{{ step }} - Pre-Validate {{ description }}'
                - '{{ step }} - {{ description }}'
            delegate_to: localhost
            ehc_script_agent:
                package_name: common
                module_name: validatePSC
                method_name: validatePSC
                method_params:
                    vCenterDict: '{{ vcenter }}'
                    vMDict: '{{ vmDict }}'
                    psc1Dict:
                        psc1IPFQDN: '{{ partnerPscDict.fqdn }}'
                        siteName: '{{ partnerPscDict.siteName }}'
            register: preValidateDeployPSC
            failed_when: not preValidateDeployPSC.data is defined or preValidateDeployPSC.data.err_message is defined or not preValidateDeployPSC.data.siteValidation == true or not preValidateDeployPSC.data.isPartner == true
            changed_when: preValidateDeployPSC.data is defined and preValidateDeployPSC.data.err_message is not defined and preValidateDeployPSC.data.siteValidation == true and preValidateDeployPSC.data.isPartner == true
            ignore_errors: preValidateDeployPSC.failed_when_result

        -
            name: '{{ step }} - {{ description }}'
            tags:
                - '{{ step }} - {{ description }}'
            delegate_to: localhost
            ehc_script_agent:
                package_name: common
                module_name: deployPSC
                method_name: deployPSC
                method_params:
                    vSphereVersion: 6.0.0
                    hostIP: '{{ first_esxi_host.host }}'
                    hostUsername: '{{ first_esxi_host.user }}'
                    hostPassword: '{{ first_esxi_host.password }}'
                    # coreDumpIPAddress: '{{ vcenter.ip }}'
                    vcenterUsername: '{{ vcenter.username }}'
                    vcenterPassword: '{{ vcenter.password }}'
                    vcenterIP: '{{ vcenter.ip }}'
                    portNum: 443
                    vcsaInfoDict:
                        installWindowsVmIP: '{{ worker_vm_dict.ip }}'
                        installWindowsVmName: '{{ worker_vm_dict.vmname }}'
                        installWindowsVmUsername: '{{ worker_vm_dict.vmusername }}'
                        installWindowsVmPassword: '{{ worker_vm_dict.vmpassword }}'
                        vcsaIsoFileLocation: '{{ sw_repository_manifest.base_path }}/{{ sw_repository_manifest.content.vcenter_iso.relative_path }}/{{ sw_repository_manifest.content.vcenter_iso.file_name }}'
                    psc2TemplateDict:
                        hostname: '{{ vcenter.host }}'
                        username: '{{ vcenter.username }}'
                        password: '{{ vcenter.password }}'
                        datacenter: '{{ vcenter_datacenter }}'
                        datastore: '{{ vcenter_datastore }}'
                        deploymentNetwork: '{{ vcenter_network }}'
                        applianceName: '{{ vmname }}'
                        pscRootPassword: '{{ vmDict.vmpassword }}'
                        thinDiskMode: '{{ vcenter_details.disk_mode }}'
                        ssoDomainName: '{{ vcenter_details_sso_domain_name }}'
                        ssoPassword: '{{ vcenter_details.sso_domain.password }}'
                        siteName: '{{ vmDict.siteName }}'
                        psc2IP: '{{ vmDict.ip }}'
                        gateway: '{{ common.management_network_gateway }}'
                        dnsServers: '{{ common.dns_server_ip }}'
                        prefix: '{{ network_prefix }}'
                        firstInstance: False
                        replicationPartnerHostname: '{{ partnerPscDict.fqdn }}'
                        deploymentOption: 'infrastructure'
                        sshEnable: '{{ ssh_enable }}'
                        psc2Fqdn: '{{ ansible_host }}'
                        target:
                            -  '{{ vcenter_cluster }}'
                            -  'Resources'
                            -  '{{ resource_pool }}'
            register: deployPSCResults
            failed_when: not deployPSCResults.data is defined or deployPSCResults.data.err_message is defined or not deployPSCResults.data == 'Pass'
            changed_when: deployPSCResults.data is defined and deployPSCResults.data.err_message is not defined and deployPSCResults.data == 'Pass'
            when: preValidateDeployPSC.failed_when_result

        -
            name: '{{ step }} - Post-Validate {{ description }}'
            tags:
                - '{{ step }} - {{ description }}'
            delegate_to: localhost
            ehc_script_agent:
                package_name: common
                module_name: validatePSC
                method_name: validatePSC
                method_params:
                    vCenterDict: '{{ vcenter }}'
                    vMDict: '{{ vmDict }}'
                    psc1Dict:
                        psc1IPFQDN: '{{ partnerPscDict.fqdn }}'
                        siteName: '{{ partnerPscDict.siteName }}'
            register: validateDeployPSC
            failed_when: not validateDeployPSC.data is defined or validateDeployPSC.data.err_message is defined or not validateDeployPSC.data.siteValidation == true or not validateDeployPSC.data.isPartner == true
            changed_when: validateDeployPSC.data is defined and validateDeployPSC.data.err_message is not defined and validateDeployPSC.data.siteValidation == true and validateDeployPSC.data.isPartner == true
            when: not deployPSCResults|skipped
