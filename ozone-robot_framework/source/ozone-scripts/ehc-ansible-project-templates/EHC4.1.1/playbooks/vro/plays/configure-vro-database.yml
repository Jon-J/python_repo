# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VRO - {{ step }} - Configure and Validate Database'
    hosts: vro_primary
    gather_facts: no
    any_errors_fatal: True
    tags:
                - 'VRO - {{ step }} - Poll Primary vRO'
    tasks:
        -
            name: 'VRO - {{ step }} - Poll Primary vRO'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: pollvRO
                method_name: validatevRO
                method_params:
                    vroDict: '{{ vroInfo }}'
            register: pollPrimaryVroResults
            changed_when: pollPrimaryVroResults.data is defined and pollPrimaryVroResults.data.err_message is not defined and pollPrimaryVroResults.data.status
            failed_when: pollPrimaryVroResults.data is not defined or pollPrimaryVroResults.data.err_message is defined or not pollPrimaryVroResults.data.status
            until: pollPrimaryVroResults.data is defined and pollPrimaryVroResults.data.err_message is not defined and pollPrimaryVroResults.data.status
            retries: '{{ poll_retries }}'
            delay: '{{ poll_delay }}'

        -
            name: 'VRO - {{ step }} - Pre-Validate Database Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateDatabaseConfiguration
                method_params:
                    vroInfo: '{{ vroInfo }}'
                    databaseDetails: '{{ databaseDetails }}'
            register: preValidateDBResult
            failed_when: not preValidateDBResult.data is defined or preValidateDBResult.data.err_message is defined or preValidateDBResult.data.databaseState != "UP_TO_DATE" or preValidateDBResult.data.status != "OK" or preValidateDBResult.data.validateDatabaseConfig == false
            changed_when: preValidateDBResult.data is defined and not preValidateDBResult.data.err_message is defined and preValidateDBResult.data.databaseState == "UP_TO_DATE" and preValidateDBResult.data.status == "OK" and preValidateDBResult.data.validateDatabaseConfig == true
            ignore_errors: preValidateDBResult.failed_when_result
        -
            name: 'VRO - {{ step }} - Configure Database'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: configureDatabase
                method_params:
                    vroInfo: '{{ vroInfo }}'
                    databaseDetails: '{{ databaseDetails }}'
            register: configureDbResult
            failed_when: not configureDbResult.data is defined or configureDbResult.data.err_message is defined or configureDbResult.data[0] != 200
            changed_when: configureDbResult.data is defined and not configureDbResult.data.err_message is defined and configureDbResult.data[0] == 200
            when: preValidateDBResult.failed_when_result
        -
            name: 'VRO - {{ step }} - Validate Database Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vro
                module_name: vroConfig
                method_name: validateDatabaseConfiguration
                method_params:
                    vroInfo: '{{ vroInfo }}'
                    databaseDetails: '{{ databaseDetails }}'
            register: validateDBConfigurationResults
            failed_when: not validateDBConfigurationResults.data is defined or validateDBConfigurationResults.data.err_message is defined or validateDBConfigurationResults.data.databaseState != "UP_TO_DATE" or validateDBConfigurationResults.data.status != "OK" or validateDBConfigurationResults.data.validateDatabaseConfig == false
            changed_when: validateDBConfigurationResults.data is defined and not validateDBConfigurationResults.data.err_message is defined and validateDBConfigurationResults.data.databaseState == "UP_TO_DATE" and validateDBConfigurationResults.data.status == "OK" and validateDBConfigurationResults.data.validateDatabaseConfig == true
            when: configureDbResult is defined and not configureDbResult|skipped