# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VCN - {{ step }} - Configure vCenter Server SSO Identity Source'
    hosts: vcenter_server
    gather_facts: no
    any_errors_fatal: True
    vars:
      step: EPB-200-100
    tags:
                - 'VCN - {{ step }} - Configure vCenter Server SSO Identity Source Type'
    tasks:
        -
            name: 'VCN - {{ step }} - Pre-Validate vCenter Server SSO Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: modifySSOIdentitySource
                method_name: validateSSOIdentitySource
                method_params:
                    domainDict: '{{ domainDict }}'
                    pscDict: '{{ psc01Dict }}'
            register: preValidateVcenterSSOResult
            failed_when: not preValidateVcenterSSOResult.data is defined or preValidateVcenterSSOResult.data.err_message is defined or not preValidateVcenterSSOResult.data.status == true
            changed_when: preValidateVcenterSSOResult.data is defined and preValidateVcenterSSOResult.data.err_message is not defined and preValidateVcenterSSOResult.data.status == true
            ignore_errors: preValidateVcenterSSOResult.failed_when_result

        -
            name: 'VCN - {{ step }} - Configure vCenter Server SSO Identity Source Type'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: modifySSOIdentitySource
                method_name: modifySSOIdentitySource
                method_params:
                    domainDict: '{{ domainDict }}'
                    pscDict: '{{ psc01Dict }}'
            register: configureVcenterSSOResult
            failed_when: not configureVcenterSSOResult.data is defined or configureVcenterSSOResult.data.err_message is defined or not configureVcenterSSOResult.data.status == true
            changed_when: configureVcenterSSOResult.data is defined and configureVcenterSSOResult.data.err_message is not defined and configureVcenterSSOResult.data.status == true
            when: preValidateVcenterSSOResult.failed_when_result

        -
            name: 'VCN - {{ step }} - Validate vCenter Server SSO Configuration'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: modifySSOIdentitySource
                method_name: validateSSOIdentitySource
                method_params:
                    domainDict: '{{ domainDict }}'
                    pscDict: '{{ psc01Dict }}'
            register: validateVcenterSSOResult
            failed_when: not validateVcenterSSOResult.data is defined or validateVcenterSSOResult.data.err_message is defined or not validateVcenterSSOResult.data.status == true
            changed_when: validateVcenterSSOResult.data is defined and validateVcenterSSOResult.data.err_message is not defined and validateVcenterSSOResult.data.status == true
            when: not configureVcenterSSOResult|skipped

-
    name: 'VCN - {{ step }} - Assign vCenter SSO Administrators'
    hosts: vcenter_server
    gather_facts: no
    any_errors_fatal: True
    vars:
      step: EPB-200-110
    tags:
        - 'VCN - {{ step }} - Assign vCenter SSO Administrators'
    tasks:
        -
            name: 'VCN - {{ step }} - Pre-Validate Assign vCenter SSO Administrators'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: assignVCenterSSOAdministrators
                method_name: validateAssignVCenterSSOAdministrators
                method_params:
                    pscDict: '{{ psc01Dict }}'
                    userDomain: '{{ domainDict.domainName }}'
                    users:
                    # TODO: Check this
#                      -   domain: "{{ ad_domain }}"
#                          name: '{{ ad_user_group.sso_admins.groupname }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_nsx_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_vro_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.ehc_sysadmin.username }}'
                    group:
                      domain: "vsphere.local"
                      name: "Administrators"
            register: preValidateVcenterSSOAdminResult
            failed_when: preValidateVcenterSSOAdminResult|failed or preValidateVcenterSSOAdminResult.data.err_message is defined or not preValidateVcenterSSOAdminResult.data is defined or not preValidateVcenterSSOAdminResult.data == true
            changed_when: preValidateVcenterSSOAdminResult.data is defined and preValidateVcenterSSOAdminResult.data.err_message is not defined and preValidateVcenterSSOAdminResult.data == true
            ignore_errors: preValidateVcenterSSOAdminResult.failed_when_result

        -
            name: 'VCN - {{ step }} - Assign vCenter SSO Administrators'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: assignVCenterSSOAdministrators
                method_name: assignVCenterSSOAdministrators
                method_params:
                    pscDict: '{{ psc01Dict }}'
                    userDomain: '{{ domainDict.domainName }}'
                    usersPayload:
#                      -   domain: "{{ ad_domain }}"
#                          name: '{{ ad_user_group.sso_admins.groupname }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_nsx_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_vro_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.ehc_sysadmin.username }}'
                    group:
                      domain: "vsphere.local"
                      name: "Administrators"
            register: assignVcenterSSOAdminResult
            failed_when: assignVcenterSSOAdminResult|failed or not assignVcenterSSOAdminResult.data is defined or assignVcenterSSOAdminResult.data.err_message is defined or not assignVcenterSSOAdminResult.data == true
            changed_when: assignVcenterSSOAdminResult.data is defined and assignVcenterSSOAdminResult.data.err_message is not defined and assignVcenterSSOAdminResult.data == true
            when: preValidateVcenterSSOAdminResult.failed_when_result

        -
            name: 'VCN - {{ step }} - Validate Assign vCenter SSO Administrators'
            delegate_to: localhost
            ehc_script_agent:
                package_name: sso
                module_name: assignVCenterSSOAdministrators
                method_name: validateAssignVCenterSSOAdministrators
                method_params:
                    pscDict: '{{ psc01Dict }}'
                    userDomain: '{{ domainDict.domainName }}'
                    users:
#                      -   domain: "{{ ad_domain }}"
#                          name: '{{ ad_user_group.sso_admins.groupname }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_nsx_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.app_vro_sso.username }}'
                      -   domain: "{{ ad_domain }}"
                          name: '{{ ad_user.ehc_sysadmin.username }}'
                    group:
                      domain: "vsphere.local"
                      name: "Administrators"
            register: validateVcenterSSOAdminResult
            failed_when: validateVcenterSSOAdminResult|failed or not validateVcenterSSOAdminResult.data is defined or validateVcenterSSOAdminResult.data.err_message is defined or not validateVcenterSSOAdminResult.data == true
            changed_when: validateVcenterSSOAdminResult.data is defined and validateVcenterSSOAdminResult.data.err_message is not defined and validateVcenterSSOAdminResult.data == true
            when: not assignVcenterSSOAdminResult|skipped


-
    name: 'VCN - {{ step }} - Configure vCenter Roles Privilege'
    hosts: vcenter_server
    gather_facts: no
    any_errors_fatal: True
    vars:
      step: EPB-200-120
    tags:
                - 'VCN - {{ step }} - Configure vCenter Roles Privilege'
    tasks:
        -
            name: 'VCN - {{ step }} - Pre-Validate vCenter Roles Privilege'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vcenter
                module_name: vcenterServerRolesPrivilege
                method_name: validategroupRoleAssignment
                method_params:
                    vcenterDetails: '{{ vcenter }}'
                    domain: '{{ ad_domain_name }}'
                    userGroups: '{{ rolesAssignment }}'
            register: preValidateVcenterRoleResults
            failed_when: preValidateVcenterRoleResults|failed or not preValidateVcenterRoleResults.data is defined or preValidateVcenterRoleResults.data.err_message is defined or not preValidateVcenterRoleResults.data.status == true
            changed_when: preValidateVcenterRoleResults.data is defined and preValidateVcenterRoleResults.data.err_message is not defined and preValidateVcenterRoleResults.data.status == true
            ignore_errors: preValidateVcenterRoleResults.failed_when_result

        -
            name: 'VCN - {{ step }} - Configure vCenter Roles Privilege'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vcenter
                module_name: vcenterServerRolesPrivilege
                method_name: rungroupRoleAssingment
                method_params:
                    vcenterDetails: '{{ vcenter }}'
                    domain: '{{ ad_domain_name }}'
                    userGroups: '{{ rolesAssignment }}'
            register: configureVcenterRolesResult
            failed_when: configureVcenterRolesResult|failed or not configureVcenterRolesResult.data is defined or configureVcenterRolesResult.data.err_message is defined or not configureVcenterRolesResult.data.status == true
            changed_when: configureVcenterRolesResult.data is defined and configureVcenterRolesResult.data.err_message is not defined and configureVcenterRolesResult.data.status == true
            when: preValidateVcenterRoleResults.failed_when_result

        -
            name: 'VCN - {{ step }} - Validate vCenter Roles Privilege'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vcenter
                module_name: vcenterServerRolesPrivilege
                method_name: validategroupRoleAssignment
                method_params:
                    vcenterDetails: '{{ vcenter }}'
                    domain: '{{ ad_domain_name }}'
                    userGroups: '{{ rolesAssignment }}'
            register: validateVcenterRolesResult
            failed_when: validateVcenterRolesResult|failed or not validateVcenterRolesResult.data is defined or validateVcenterRolesResult.data.err_message is defined or not validateVcenterRolesResult.data.status == true
            changed_when: validateVcenterRolesResult.data is defined and validateVcenterRolesResult.data.err_message is not defined and validateVcenterRolesResult.data.status == true
            when: not configureVcenterRolesResult|skipped

