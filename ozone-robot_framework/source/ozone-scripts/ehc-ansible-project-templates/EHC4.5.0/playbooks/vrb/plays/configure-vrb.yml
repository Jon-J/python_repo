# ------------------------------------------------------------------------------
# Copyright (C) 2016-2017 DELL EMC Corporation. All Rights Reserved.

# This software contains the intellectual property of DELL EMC Corporation
# or is licensed to DELL EMC Corporation from third parties.  Use of this
# software and the intellectual property contained therein is expressly
# limited to the terms and conditions of the License Agreement under which
# it is provided by or on behalf of DELL  EMC.

# ------------------------------------------------------------------------------

-
    name: 'VRB - {{ step }} - Initialize vRealize Businesss'
    hosts: vr_business
    vars:
      step: EPB-600-030
    tags:
              - 'VRB - {{ step }} - Initialize vRealize Businesss and Integrate vRA'
    tasks:
        -
            name: 'VRB - {{ step }} - Validate vRB Initialization'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrb
                module_name: vRBIntegratevRA
                method_name: validatevRBvRAIntegration
                method_params:
                    vRBDict: '{{ vmDict }}'
                    timeServers: '{{ ntp_servers }}'
                    certPathDict:
                        keyFilePath: "{{ repository.certs.vrb_svc_key_path }}"
                        cerFilePath: "{{ repository.certs.vrb_svc_cert_path }}"
                    vRADict: '{{ vRAInitializationDict }}'
            register: validateVrbResults
            changed_when: validateVrbResults.data is defined and validateVrbResults.data.err_message is not defined and validateVrbResults.data.status == true
            failed_when: not validateVrbResults.data is defined or validateVrbResults.data.err_message is defined or not validateVrbResults.data.status == true
            ignore_errors: validateVrbResults.failed_when_result

        -
            name: 'VRB - {{ step }} - Initialize vRB and Integrate with vRA'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrb
                module_name: vRBIntegratevRA
                method_name: integratevRBwithvRA
                method_params:
                    vRBDict: '{{ vmDict }}'
                    timeServers: '{{ ntp_servers }}'
                    certPathDict:
                        keyFilePath: "{{ repository.certs.vrb_svc_key_path }}"
                        cerFilePath: "{{ repository.certs.vrb_svc_cert_path }}"
                    vRADict: '{{ vRAInitializationDict }}'
            register: initializeVrbResults
            changed_when: initializeVrbResults.data is defined and initializeVrbResults.data.err_message is not defined and initializeVrbResults.data.status == true
            failed_when: not initializeVrbResults.data is defined or initializeVrbResults.data.err_message is defined or not initializeVrbResults.data.status == true
            when: validateVrbResults.failed_when_result

        -
            name: 'VRB - {{ step }} - Post Validate vRB Initialization and Integration with vRA'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validatevRBvRAIntegration
                method_params:
                    vRBDict: '{{ vmDict }}'
                    timeServers: '{{ ntp_servers }}'
                    certPathDict:
                        keyFilePath: "{{ repository.certs.vrb_svc_key_path }}"
                        cerFilePath: "{{ repository.certs.vrb_svc_cert_path }}"
                    vRADict: '{{ vRAInitializationDict }}'
                module_name: vRBIntegratevRA
                package_name: vrb
            register: postValidateVrbResults
            changed_when: postValidateVrbResults.data is defined and postValidateVrbResults.data.err_message is not defined and postValidateVrbResults.data.status == true
            failed_when: not postValidateVrbResults.data is defined or postValidateVrbResults.data.err_message is defined or not postValidateVrbResults.data.status == true
            when: not initializeVrbResults|skipped

-
    name: 'VRB - {{ step }} - Assigning vRealize Business roles to vRA tenant users'
    hosts: vr_business
    gather_facts: no
    vars:
      step: EPB-600-040
    any_errors_fatal: True
    tags:
                - 'VRB - {{ step }} - Assign vRealize Business roles to vRA tenant users'
    tasks:
        -
            name: 'VRB - {{ step }} - Validate Assigning vRealize Business roles to vRA tenant users'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vra
                module_name: tenantVRBRoleAssignment
                method_name: validateRole
                method_params:
                    credentials: '{{ vRACred_ehc_tenant_admin }}'
                    assignment: '{{ vRBRoleAssignment }}'
            register: preValidatevRBRoleResults
            failed_when: not preValidatevRBRoleResults.data is defined or preValidatevRBRoleResults.data.err_message is defined or preValidatevRBRoleResults.data.status == false
            changed_when: preValidatevRBRoleResults.data is defined and not preValidatevRBRoleResults.data.err_message is defined and preValidatevRBRoleResults.data.status == true
            ignore_errors: preValidatevRBRoleResults.failed_when_result

        -
            name: 'VRB - {{ step }} - Assign vRealize Business roles to vRA tenant users'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vra
                module_name: tenantVRBRoleAssignment
                method_name: assignVRBRoles
                method_params:
                    credentials: '{{ vRACred_ehc_tenant_admin }}'
                    assignment: '{{ vRBRoleAssignment }}'
            register: vRBRoleResults
            failed_when: not vRBRoleResults.data is defined or vRBRoleResults.data.err_message is defined or not vRBRoleResults.data.status == true
            changed_when: vRBRoleResults.data is defined and not vRBRoleResults.data.err_message is defined and vRBRoleResults.data.status == true
            when: preValidatevRBRoleResults.failed_when_result

        -
            name: 'VRB - {{ step }} - Post Validate Assigning vRealize Business roles to vRA tenant users'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vra
                module_name: tenantVRBRoleAssignment
                method_name: validateRole
                method_params:
                    credentials: '{{ vRACred_ehc_tenant_admin }}'
                    assignment: '{{ vRBRoleAssignment }}'
            register: validatevRBRoleResults
            failed_when: not validatevRBRoleResults.data is defined or validatevRBRoleResults.data.err_message is defined or not validatevRBRoleResults.data.status == true
            changed_when: validatevRBRoleResults.data is defined and not validatevRBRoleResults.data.err_message is defined and validatevRBRoleResults.data.status == true
            when: not vRBRoleResults|skipped

-
    name: 'VRB - {{ step }} - Poll vRealize Business'
    hosts: vr_business
    vars:
      step: EPB-600-045
    tasks:
        -
            name: 'VRB - {{ step }} - Poll vRealize Business'
            tags:
                - 'VRB - {{ step }} - Poll vRealize Business'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrb
                module_name: pollvRealizeBusiness
                method_name: pollvRBWithoutCredential
                method_params:
                    vRBHost: '{{ ansible_host }}'
            register: pollVrbResults
            changed_when: pollVrbResults.data is defined and pollVrbResults.data.err_message is not defined and pollVrbResults.data.status == true
            failed_when: not pollVrbResults.data is defined or pollVrbResults.data.err_message is defined or not pollVrbResults.data.status == true
            until: pollVrbResults.data is defined and pollVrbResults.data.err_message is not defined and pollVrbResults.data.status == true
            retries: '{{ poll_retries }}'
            delay: '{{ poll_delay }}'

-
    name: 'VRB - {{ step }} - Add vCenter Connections'
    hosts: vr_business
    gather_facts: no
    vars:
      step: EPB-600-050
    any_errors_fatal: True
    tags:
        - 'VRB - {{ step }} - Assign vCenter Connections on vRB'
    tasks:
        -
            name: 'VRB - {{ step }} - Validate vCenter Connections on vRB'
            delegate_to: localhost
            ehc_script_agent:
                package_name: vrb
                module_name: manageConnections
                method_name: validatevCenterConnection
                method_params:
                    vraDetails: '{{ vRADict }}'
                    vrbHost: '{{ ansible_host }}'
                    vCenterDetails: '{{ vCenterDetails | combine({"password": None}) }}'
            register: preValidatevCenterConnectionResults
            failed_when: not preValidatevCenterConnectionResults.data is defined or preValidatevCenterConnectionResults.data.err_message is defined or not preValidatevCenterConnectionResults.data.status == true
            changed_when: preValidatevCenterConnectionResults.data is defined and not preValidatevCenterConnectionResults.data.err_message is defined and preValidatevCenterConnectionResults.data.status == true
            ignore_errors: preValidatevCenterConnectionResults.failed_when_result

        -
            name: 'VRB - {{ step }} - Assign vCenter Connections on vRB'
            delegate_to: localhost
            ehc_script_agent:
                method_name: addvCenterConnection
                method_params:
                    vraDetails: '{{ vRADict }}'
                    vrbDetails: '{{ vmDict }}'
                    vCenterDetails: '{{ vCenterDetails }}'
                module_name: manageConnections
                package_name: vrb
            register: vCenterConnectionResults
            failed_when: not vCenterConnectionResults.data is defined or vCenterConnectionResults.data.err_message is defined or not vCenterConnectionResults.data.status == true
            changed_when: vCenterConnectionResults.data is defined and not vCenterConnectionResults.data.err_message is defined and vCenterConnectionResults.data.status == true
            when: preValidatevCenterConnectionResults.failed_when_result
            retries: 3
            delay: 30
            until: vCenterConnectionResults.data is defined and not vCenterConnectionResults.data.err_message is defined and vCenterConnectionResults.data.status == true

        -
            name: 'VRB - {{ step }} - Post Validate vCenter Connections on vRB'
            delegate_to: localhost
            ehc_script_agent:
                method_name: validatevCenterConnection
                method_params:
                    vraDetails: '{{ vRADict }}'
                    vrbHost: '{{ ansible_host }}'
                    vCenterDetails: '{{ vCenterDetails | combine({"password": None}) }}'
                module_name: manageConnections
                package_name: vrb
            register: validatevCenterConnectionResults
            failed_when: not validatevCenterConnectionResults.data is defined or validatevCenterConnectionResults.data.err_message is defined or not validatevCenterConnectionResults.data.status == true
            changed_when: validatevCenterConnectionResults.data is defined and not validatevCenterConnectionResults.data.err_message is defined and validatevCenterConnectionResults.data.status == true
            when: not vCenterConnectionResults|skipped
